<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kh.mappers.RoomDetailMapper">

	<!-- 방 상세 보기 -->
	<select id="getRoomDetail" resultType="RoomDto">
		select * from tbl_host h, tbl_user u, tbl_room r
		 where h.user_email = u.user_email and h.room_num = r.room_num
		 and h.room_num = #{room_num}
	</select>
  	
	<!-- 후기 목록에 사용할 총개수 -->
	<select id="getReviewCount" resultType="int">
		select count(*) from tbl_room_review
		where room_num = #{room_num}
	</select>
  	
  	<!-- 후기 보기(목록/room_num) -->
  	<select id="getRoomDetailReview" resultType="RoomReviewDto">
   		select * from
		(select rownum rnum, a.*from
		(select r.*, u.user_pic, u.user_name from tbl_room_review r, tbl_user u
        where r.user_email = u.user_email and room_num = #{room_num}
		order by room_review_num desc) a)
		where rnum &gt;= #{reviewPagingDto.startRow} and rnum &lt;= #{reviewPagingDto.endRow}
  	</select>
  	
  	<!-- 후기 작성 -->
  	<insert id="setReview">
  		insert into tbl_room_review (room_review_num, user_email, room_num, review_score_location, review_score_cleanliness, review_score_checkin, review_score_communication, total_score, room_review_text)
  		values (seq_room_review_num.nextval, #{user_email}, #{room_num}, #{review_score_location}, #{review_score_cleanliness}, #{review_score_checkin}, #{review_score_communication}, #{total_score}, #{room_review_text})
  	</insert>
  		
  	<!-- 방 평점 수정 -->
  	<update id="updateRoomScore">
  		update tbl_room set
  			room_score = #{room_score}
  		where room_num = #{room_num}
  	</update>
	
<!-- 	room type 검색 -->
	<select id="getRoomType" resultType="String">
		select room_type_explain from tbl_room_type
		where room_type_num = #{room_type_num}
	</select>
	
<!-- 	room option 검색 -->
	<select id="getRoomOption" resultType="String">
		select room_option_explain from tbl_room_option
		where room_option_code = #{room_option_code}
	</select>
	
<!-- 	방의 사진 정보 얻기 -->
	<select id="getRoomPicInfo" resultType="RoomPictureVo">
		select * from tbl_room_picture
		where room_num = #{room_num}
	</select>
	
<!-- 	1구역 사진  -->
	<select id="getOneAreaPic" resultType="RoomPictureVo">
		select * from
		(select rownum rnum, p.*from        
		(select * from tbl_room_picture
		where room_num = #{room_num}) p
		order by rnum)
		where rnum = 1
	</select>
	
<!-- 	2,3구역 사진 -->
	<select id="getTwoAreaPic" resultType="RoomPictureVo">
		select * from
		(select rownum rnum, p.*from
		(select * from tbl_room_picture
		where room_num = #{room_num}) p
		order by rnum)
		where rnum &gt;= 2 and rnum &lt;= 3
	</select>
	
<!-- 	4,5구역 사진 -->
	<select id="getThreeAreaPic" resultType="RoomPictureVo">
		select * from
		(select rownum rnum, p.*from
		(select * from tbl_room_picture
		where room_num = #{room_num}) p
		order by rnum)
		where rnum &gt;= 4 and rnum &lt;= 5
	</select>
	
<!-- 	포인트 이용 내역에 작성 -->
	<insert id="setPointList">
		insert into tbl_point (point_num, user_email, point_code, point_score, room_num)
		values (seq_point_num.nextval, #{user_email}, 'R3', 500, #{room_num})
	</insert>

<!-- 	리뷰 작성후 유저에게 포인트 주기 -->
	<update id="setUserPoint">
		update tbl_user set
		user_point = user_point+500
		where user_email = #{user_email}
	</update>
	
<!-- 	쪽지 받는 사람 정보 -->
	<select id="getReceiver">
		select * from tbl_user
		where user_email = #{user_email}
	</select>
</mapper>